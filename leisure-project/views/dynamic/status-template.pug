.col.s12
        .profile-page-wall-post.card.z-depth-3
            .row.status-details
                .col.s3.m2
                    img.circle.responsive-img.valign.profile-image-post(src=status.author.profilePic)
                .col.s9
                    p.grey-text.text-darken-4.margin
                        | #{status.author.firstName} #{status.author.lastName}
                    span.grey-text.text-darken-1.ultra-small Shared publicly  -   #{status.dateCreated.getDate() + '/' + (status.dateCreated.getMonth() + 1) + '/' + status.dateCreated.getUTCFullYear()}
            if status.content.length > 0
                .row.status-content
                    .col.s12                            
                        p
                            | #{status.content}
            if status.imageUrl.length > 0
                .row
                    .col.s12                            
                        img(src=status.imageUrl).responsive-img
            .card-action
                if currentUser
                    .row.interaction-container
                        .col.s12.m12.card-action-share
                            .row
                                if currentUser && status.likes.includes(currentUser.username)
                                    .col.s2.m2.btn.rate-btn.liked
                                        | Unlike
                                else
                                    .col.s2.m2.btn.rate-btn
                                        | Like
                                div.hidden
                                    | #{'/users/' + status.author.username + '/' + status._id}
                                .col.s3.m3.flow-text.likes-text
                                    | #{status.likes.length} likes
                                .col.s2.m2.btn.small-margin
                                    | Share
                                .col.s4.m3.flow-text
                                    | 0 shares
                    .row.comment-container
                        .commentInput-field.col.s8.margin
                            form.comment-form(action='/users/' + status.author.username + '/' + status._id, method='POST')
                                input.commentInput#profile-comments.validate.margin(name="commentContent", type='text' placeholder='Write a comment')
            if status.comments.length > 0
                .row
                    .col.s12
                        - var tabSize = 5
                        - var tabsNeeded = Math.ceil(status.comments.length / tabSize)
                        
                        - var k = 1
                        - var index = 0
                        while k <= tabsNeeded
                            div(id=status._id + k).col.s12                            
                                ul.collection
                                    while index <= tabSize * (k - 1) + tabSize - 1 && index < status.comments.length
                                        li.collection-item
                                            a.comment-username(href='/users/' + status.comments[index].author.username)
                                                | #{status.comments[index].author.username} 
                                            | said: #{status.comments[index].content}
                                            - index++
                                - k++
                        if tabsNeeded > 0
                            - var n = 1
                            ul.pagination.center
                                while n <= tabsNeeded
                                    li.tab.waves-effect
                                        a(href='#' + status._id + n)
                                            | #{n++}